pipeline {
    agent any
    tools { 
      maven 'maven3' 
      }
    environment{
      def mvnHome =  tool name: 'maven3', type: 'maven' 
      def BRANCH_NAME ='GIT_BRANCH'
  }
stages {
      stage('GIT checkout') {
                    steps {
                        script{
                               if (env.GIT_BRANCH.contains('main')) {
                            echo 'Hello from main branch'
                            git branch: 'main', url: 'https://github.com/PandeeswariSubbaiya/Testingjenkins_Repo.git'
                            }
                               else {
                                   echo "Run this stage only if the branch is not main"
                                  git branch: 'release', url: 'https://github.com/PandeeswariSubbaiya/Testingjenkins_Repo.git' 
                               }
                               }
                          }
                        }
    
    stage('Pull request') {
        steps {
            withCredentials([string(credentialsId: 'GITHUB_TOKEN', variable: 'GITHUB_TOKEN')]) {
                sh '''
                        curl -d '{"title": "Merge changes from dev to main", "head": "main", "base": "dev"}' -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/json" https://api.github.com/repos/PandeeswariSubbaiya/Automated/pulls
                    '''
                    }
                 }
             }
     stage('Merge release to main') {
                        steps {
                            script {
                                sh "git checkout main"
                                sh "git merge --no-ff --allow-unrelated-histories release"
                                    }
                                }
                             }
     }
  }
